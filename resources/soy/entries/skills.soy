/* ****************************************************************************
 * Copyright (c) 2002-2012 Peter 'Merlin' Balsiger and Fred 'Mythos' Dobler
 * All rights reserved
 *
 * This file is part of Dungeon Master Assistant.
 *
 * Dungeon Master Assistant is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * Dungeon Master Assistant is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with Dungeon Master Assistant; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 *****************************************************************************/

/* Templates for skills. */
{namespace dma.entries.skills}

/** Show a skill. */
{template .show}
  {@param entry: ?}
  {@param monster: ?}

  {$entry.name}{sp}
  {annotate(call($entry, 'annotatedModifier', $monster), '', 'ranged')}
{/template}

/** Editing the skill. */
{template .edit}
  {@param? entry: ?}
  {@param? prefix: any}
  {@param index: number}
  {call dma.edit.field_selection}
    {param name: ($prefix ? $prefix : '') + 'skill@' + $index + '.name' /}
    {param caption: 'name' /}
    {param value: $entry ? lower($entry.name) : '' /}
    {param choices: $ij.Skill.available_skills /}
    {param class: 'narrow' /}
  {/call}
  {call dma.edit.field_input}
    {param name: ($prefix ? $prefix : '') + 'skill@' + $index + '.ranks' /}
    {param caption: 'ranks' /}
    {param value: $entry ? $entry.ranks : '' /}
    {param validate: 'number' /}
    {param width: '25%' /}
  {/call}
{/template}

/**
 * The tiny item card.
 *
 * @param entry      The entry rendered.
 */
{template .tiny}
  <div class="entry level tiny" onclick="details('{$entry.path}')">
    {$entry.abbreviation}
  </div>
{/template}

/**
 * The small item card.
 *
 * @param entry The entry rendered.
 */
{template .small}
  <div class="entry item card small">
    <div class="header" style="background-color: #008">
      <div class="actions">
        <div class="sprite white delete" title="permanently delete this"></div>
      </div>

      <div class="title">
        {if $ij.isDM}
          {$entry.DM_name}
          {if $entry.player_name and $entry.DM_name != $entry.player_name}
            {sp}[{$entry.player_name}]
          {/if}
        {else}
          {$entry.player_name}
        {/if}
        {sp}({$entry.name})
        {if $ij.isDM and $entry.DM_name != $entry.player_name}
          <br /><span class="subtitle">{$entry.player_name}&nbsp;</span>
        {/if}
      </div>
    </div>

    <div class="contents" style="background-color: #eef; border-color: #ccf">
      <div class="image main">
        {call dma.entry.simplemainfile}
          {param entry: $entry /}
          {param size: 50 /}
        {/call}
      </div>

      {call .statistics}
        {param entry: $entry /}
      {/call}

      <div class="appearance">
        {$entry.appearance}
      </div>

     <div class="short-description">
       {annotate($entry.combined_short_description)}
     </div>

   </div>
  </div>
{/template}

/**
 * The item card.
 *
 * @param entry The entry rendered.
 */
{template .large}
  <div class="entry item card">
    <div class="header" style="background-color: #008">
      <div class="actions">
        <div class="sprite white delete" title="permanently delete this"></div>
      </div>

      <div class="title">
        {if $ij.isDM}
          {$entry.DM_name}
          {if $entry.player_name and $entry.DM_name != $entry.player_name}
            {sp}[{$entry.player_name}]
          {/if}
        {else}
          {$entry.player_name}
        {/if}
        {sp}({$entry.name})
        {if $ij.isDM and $entry.DM_name != $entry.player_name}
          <br /><span class="subtitle">{$entry.player_name}&nbsp;</span>
        {/if}
      </div>
    </div>

    <div class="contents" style="background-color: #eef; border-color: #ccf">
      <div class="top-block">
        <div class="align-center size-tiny">
          {$entry.base}
        </div>

        <div class="image main">
          {call dma.entry.simplemainfile}
            {param entry: $entry /}
            {param size: 90 /}
          {/call}
        </div>

        {call .statistics}
          {param entry: $entry /}
        {/call}
      </div>

      <div class="bottom-block">
        <div class="appearance">
          {$entry.appearance}
        </div>

        {if $entry.incomplete.present and $ij.isDM}
          <div class="incomplete">
            {call dma.value.extension}
              {param value: 'incomplete' /}
            {/call}
            {sp}
            {annotate($entry.combined_incomplete)}
          </div>
        {/if}

        <div class="description">
          {annotate($entry.combined_description)}
        </div>
        {if $entry.DM_notes.present}
          <div class="dm-notes block">
            {call dma.value.extension}
              {param value: 'notes' /}
            {/call}
            {sp}
            {$entry.dm_notes.get}
          </div>
        {/if}
        {if $entry.player_notes.present}
          <div class="player-notes block">
            {call dma.value.extension}
              {param value: 'notes' /}
            {/call}
            {sp}
            {$entry.player_notes.get}
          </div>
        {/if}
        {if $entry.container}
          <div class="content">
            {if $entry.campaign.present}
              {foreach $item in $entry.contents}
                {call .tiny}
                  {param entry: entry($entry.campaign.get.key + '/item/'
                      + $item.name) /}
                {/call}
              {/foreach}
            {/if}
          </div>
        {/if}
        <div class="references">
          {annotate($entry.combined_references)}
        </div>
      </div>
    </div>
  </div>
{/template}

/**
 * Statistics values in item the card.
 *
 * @param entry The entry shown.
 */
{template .statistics}
  <div class="statistics">
    <div class="statistics-lines">
      <div class="value">
        {call dma.value.extension}
          {param value: 'value' /}
        {/call}
        {sp}
        {annotate($entry.combined_value)}
      </div>
  </div>
{/template}
