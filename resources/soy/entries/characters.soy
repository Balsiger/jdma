/* ****************************************************************************
 * Copyright (c) 2002-2014 Peter 'Merlin' Balsiger and Fred 'Mythos' Dobler
 * All rights reserved
 *
 * This file is part of Dungeon Master Assistant.
 *
 * Dungeon Master Assistant is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * Dungeon Master Assistant is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with Dungeon Master Assistant; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 *****************************************************************************/

/*
 * Templates for characters.
 */
{namespace dma.entries.characters}

/**
 * Show the given entry in standard format.
 * 
 * @param entry The entry to show.
 * @param first the first entry available, if any
 * @param previous the previous entry, if any
 * @param list the overview of all entries
 * @param next the next entry, if any
 * @param last the last entry, if any
 */
{template .show}
  {call dma.entry.show}
    {param entry: $entry /}
    {param noprint: true /}
    {param type: 'product' /}
    {param first: $first /}
    {param previous: $previous /}
    {param list: $list /}
    {param next: $next /}
    {param last: $last /}
    {param color: '#39f' /}
    {param title kind="html"}
      {call dma.entry.title}
        {param title: $entry.name /}
        {param color: '#39f' /}
      {/call}      
    {/param}
    {param values kind="html"}
      {call dma.entry.value}
        {param label: 'Player' /}
        {param value: $entry.base_character_name /}
        {param color: '#39f' /}
      {/call}
      {call dma.entry.value}
        {param label: 'Gender' /}
        {param value: $entry.gender /}
        {param color: '#39f' /}
      {/call}
      {call dma.entry.value}
        {param label: 'XP' /}
        {param value: $entry.XP /}
        {param color: '#39f' /}
      {/call}
      {call dma.entry.value}
        {param label: 'Alignment' /}
        {param value: $entry.alignment /}
        {param color: '#39f' /}
      {/call}
      {if $entry.religion.present}
        {call dma.entry.value}
          {param label: 'Religion' /}
          {param value: $entry.religion /}
          {param color: '#39f' /}
        {/call}
      {/if}
      {if $entry.height.present or $entry.weight.present 
        or $entry.looks.present}
        {call dma.entry.value}
          {param label: 'Looks' /}
          {param value kind="html"}
            {$entry.height.present ? $entry.height : '' }{sp}
            {$entry.weight.present ? $entry.weight : '' }{sp}
            {$entry.looks.present ? $entry.looks : '' }
          {/param}           
          {param color: '#39f' /}
        {/call}
      {/if}
      {call dma.entry.value}
        {param label: 'Race' /}
        {param value kind="html"}
          {foreach $monster in $entry.base_entries}
            {call dma.page.link}
              {param text: $monster.name /}
              {param url: '/monster/'  + $monster.name /}
            {/call}
            {if not isLast($monster)}, {/if}
          {/foreach}
        {/param}
        {param color: '#39f' /}
      {/call}
      {call dma.entry.value}
        {param label: 'State' /}
        {param value: $entry.state.string /}
        {param color: '#39f' /}
      {/call}
      {call dma.entry.value}
        {param label: 'Levels' /}
        {param value kind="html"}
          {foreach $level in $entry.get_cumulated_levels}
            {$level}
            {if not isLast($level)}, {/if}
          {/foreach}
        {/param}
        {param color: '#39f' /}
      {/call}
      {call dma.entry.value}
        {param label: 'Skills' /}
        {param value kind="html"}
          {foreach $skill in $entry.skills}
            {call dma.entries.skills.show}
              {param entry: $skill /}
              {param monster: $entry /}
            {/call}
            {if not isLast($skill)}, {/if}
          {/foreach}
        {/param}
        {param color: '#39f' /}
      {/call}
      {call dma.entry.value}
        {param label: 'Feats' /}
        {param value kind="html"}
          {foreach $feat in $entry.feats}
            {call dma.entries.feats.tiny}
              {param entry: $feat /}
            {/call}
            {if not isLast($feat)}, {/if}
          {/foreach}
        {/param}
        {param color: '#39f' /}
      {/call}
      {call dma.entry.value}
        {param label: 'Qualities' /}
        {param value kind="html"}
          {foreach $quality in $entry.qualities}
            {call dma.entries.qualities.tiny}
              {param entry: $quality /}
            {/call}
            {if not isLast($quality)}, {/if}
          {/foreach}
          // unused qualities
          <div>
            {if length($entry.unused_qualities)}
              ({foreach $quality in $entry.unused_qualities}
                {$quality}
                {if not isLast($quality)}, {/if}
              {/foreach})
            {/if}
          </div>
        {/param}
        {param color: '#39f' /}
      {/call}
      {call dma.entry.value}
        {param label: 'Languages' /}
        {param value: annotate($entry.languages) /}
        {param color: '#39f' /}
      {/call}
      {call dma.entry.value}
        {param label: 'Possessions' /}
        {param value kind="html"}
          {foreach $item in $entry.possessions}
            {call dma.entries.items.reference}
              {param entry: $item /}
            {/call}
            {if not isLast($item)}, {/if}
          {/foreach}
          {if $ij.user}
            {sp}|{sp}
            <span class="action"
                  onclick="edit.show('', '{$entry.campaign.path}/item/CREATE',
                                     'add-item', '',
                                     'parent:character/{$entry.name}')">
              add item
            </span>
          {/if}
        {/param}
        {param color: '#39f' /}
      {/call}
      {call dma.entry.value}
        {param label: 'Animal Companions' /}
        {param value kind="html"}
          {foreach $monster in $entry.animal_companions}
            {call dma.entries.monsters.reference}
              {param entry: $monster /}
            {/call}
            {if not isLast($monster)}, {/if}
          {/foreach}
          {if $ij.user}
            {sp}|{sp}
            <span class="action"
                  onclick="edit.show('', '{$entry.campaign.path}/monster/CREATE',
                                     'add-monster', '',
                                     'parent:character/{$entry.name}')">
              add animal companion
            </span>
          {/if}
        {/param}
        {param color: '#39f' /}
      {/call}
    {/param}
  {/call}
  
  {call .sheet}
    {param entry: $entry /}
  {/call}
{/template}

/** Print a character sheet. */
{template .sheet}
  {@param entry: ?}
  <div class="character-sheet">
    <div class="sheet-page">
      {call .sheet_page_1}
        {param entry: $entry /}
      {/call}
    </div>

    <div class="sheet-page">
      {call .sheet_page_combat}
        {param entry: $entry /}
      {/call}
    </div>

    <div class="sheet-page">
      {call .sheet_page_2}
        {param entry: $entry /}
      {/call}
    </div>

    <div class="sheet-page">
      {call .sheet_page_3}
        {param entry: $entry /}
      {/call}
    </div>

    <div class="sheet-page">
      {call .sheet_page_4}
        {param entry: $entry /}
      {/call}
    <div>

    {if $entry.has_spells}
      <div class="sheet-page">
        {call .sheet_page_spells}
          {param entry: $entry /}
        {/call}
      </div>
    {/if}

    {if length($entry.animal_companions) > 0}
      {foreach $animal in $entry.animal_companions}
        {if index($animal) % 2 == 0}
          <div class="sheet-page">
            {call .sheet_subtitle}
              {param title: 'Animal Companions' /}
            {/call}
        {/if}

        {call dma.entries.monsters.sheet}
          {param entry: $animal /}
        {/call}

        {if index($animal) % 2 == 1 or isLast($animal)}
          </div>
        {/if}
      {/foreach}
    {/if}
  </div>
{/template}

/**
 * Contents of the first page of the character sheet.
 *
 * @param entry the entry to print
 */
{template .sheet_page_1}
  {call .sheet_title /}

  <div class="block">
    {call .sheet_general}
      {param entry: $entry /}
    {/call}
  </div>

  <div class="sheet-row">
    <div class="sheet-column" style="flex: 5; margin-right: 5px;">
      <div class="sheet-row block">
        <div class="sheet-column vruler">
          {call .sheet_abilities}
            {param entry: $entry /}
          {/call}
        </div>

        <div class="sheet-column">
          {call .sheet_combat_options}
            {param entry: $entry /}
            {param size: 4 /}
          {/call}
        </div>
      </div>

      <div class="block">
        {call .sheet_speed}
          {param entry: $entry /}
        {/call}
      </div>

      <div class="block">
        {call .sheet_saves}
          {param entry: $entry /}
        {/call}
      </div>

      {call .sheet_ac}
        {param entry: $entry /}
      {/call}
    </div>

    <div class="sheet-column" style="display: flex; flex-direction: column;">
      {call .sheet_ability_modifiers}
        {param entry: $entry /}
      {/call}

      {call .sheet_special_attacks}
        {param entry: $entry /}
      {/call}

      {call .sheet_hit_points}
        {param entry: $entry /}
        {param break: 10 /}
      {/call}

      {call .sheet_special_defenses}
        {param entry: $entry /}
      {/call}
    </div>
  </div>
{/template}

/** The title of the character sheet. */
{template .sheet_title}
  <div class="title">
    <div class="title-logo"></div>
    <div class="title-text"></div>
    <div class="subtitle">
      Suitable for characters of any race or class
      (including multiclass characters)
    </div>
  </div>
{/template}

/** The general section of the character sheet. */
{template .sheet_general}
  {@param entry: ?}
  {call dma.sheet.old_value}
    {param label: 'Character Name' /}
    {param width: '50%' /}
    {param value: $entry.name /}
  {/call}
  {call dma.sheet.old_value}
    {param label: 'Player Name' /}
    {param width: '50%' /}
    {param value kind="html"}
      {$entry.base_character_name} ({$entry.player.real_name})
    {/param}
  {/call}

  {call dma.sheet.old_value}
    {param label: 'Class and Level' /}
    {param width: '50%' /}
    {param value kind="html"}
      {foreach $level in $entry.get_cumulated_levels}
        {$level}
        {if not isLast($level)}, {/if}
      {/foreach}
    {/param}
  {/call}
  {call dma.sheet.old_value}
    {param label: 'ECL' /}
    {param width: '5%' /}
    {param value: $entry.effective_character_level /}
  {/call}
  {call dma.sheet.old_value}
    {param label: 'Race/Template' /}
    {param width: '15%' /}
    {param value kind="html"}
      {foreach $monster in $entry.base_entries}
        {$monster.name}
        {if not isLast($monster)}, {/if}
      {/foreach}
    {/param}
  {/call}
  {call dma.sheet.old_value}
    {param label: 'Size' /}
    {param width: '15%' /}
    {param value: annotate($entry.combined_size) /}
  {/call}
  {call dma.sheet.old_value}
    {param label: 'Gender' /}
    {param width: '15%' /}
    {param value: $entry.gender /}
  {/call}
  {call dma.sheet.old_value}
    {param label: 'Alignment' /}
    {param width: '10%' /}
    {param value: $entry.alignment /}
  {/call}
  {call dma.sheet.old_value}
    {param label: 'Religion/Patron Deity' /}
    {param width: '40%' /}
    {param value: $entry.religion.present ? $entry.religion : '' /}
  {/call}
  {call dma.sheet.old_value}
    {param label: 'Height' /}
    {param width: '10%' /}
    {param value: $entry.height.present ? $entry.height : '' /}
  {/call}
  {call dma.sheet.old_value}
    {param label: 'Weight' /}
    {param width: '10%' /}
    {param value: $entry.weight.present ? $entry.weight : '' /}
  {/call}
  {call dma.sheet.old_value}
    {param label: 'Looks' /}
    {param width: '30%' /}
    {param value: $entry.looks.present ? $entry.looks : '' /}
  {/call}
{/template}

/**
 * The abilities box.
 *
 * @param entry
 */
{template .sheet_abilities}
  <div class="sheet-part">
    {call .sheet_subtitle}
      {param title: 'Ability Scores' /}
    {/call}

    {call .ability}
      {param name: 'Strength' /}
      {param abbreviation: 'STR' /}
      {param total: $entry.total_strength /}
      {param ability: annotate($entry.combined_strength) /}
      {param racial: $entry.racial_strength_modifier /}
      {param modifier: bonus($entry.strength_modifier) /}
      {param misc kind="html"}
        {if $entry.strength_misc_modifier.unconditional_modifier}
          {bonus($entry.strength_misc_modifier.unconditional_modifier)}
        {/if}
      {/param}
    {/call}
    {call .ability}
      {param name: 'Dexterity' /}
      {param abbreviation: 'DEX' /}
      {param total: $entry.total_dexterity /}
      {param ability: annotate($entry.combined_dexterity) /}
      {param racial: $entry.racial_dexterity_modifier /}
      {param modifier: bonus($entry.dexterity_modifier) /}
      {param misc kind="html"}
        {if $entry.dexterity_misc_modifier.unconditional_modifier}
          {bonus($entry.dexterity_misc_modifier.unconditional_modifier)}
        {/if}
      {/param}
    {/call}
    {call .ability}
      {param name: 'Constitution' /}
      {param abbreviation: 'CON' /}
      {param total: $entry.total_constitution /}
      {param ability: annotate($entry.combined_constitution) /}
      {param racial: $entry.racial_constitution_modifier /}
      {param modifier: bonus($entry.constitution_modifier) /}
      {param misc kind="html"}
        {if $entry.constitution_misc_modifier.unconditional_modifier}
          {bonus($entry.constitution_misc_modifier.unconditional_modifier)}
        {/if}
      {/param}
    {/call}
    {call .ability}
      {param name: 'Intelligence' /}
      {param abbreviation: 'INT' /}
      {param total: $entry.total_intelligence /}
      {param ability: annotate($entry.combined_intelligence) /}
      {param racial: $entry.racial_intelligence_modifier /}
      {param modifier: bonus($entry.intelligence_modifier) /}
      {param misc kind="html"}
        {if $entry.intelligence_misc_modifier.unconditional_modifier}
          {bonus($entry.intelligence_misc_modifier.unconditional_modifier)}
        {/if}
      {/param}
    {/call}
    {call .ability}
      {param name: 'Wisdom' /}
      {param abbreviation: 'WIS' /}
      {param total: $entry.total_wisdom /}
      {param ability: annotate($entry.combined_wisdom) /}
      {param racial: $entry.racial_wisdom_modifier /}
      {param modifier: bonus($entry.wisdom_modifier) /}
      {param misc kind="html"}
        {if $entry.wisdom_misc_modifier.unconditional_modifier}
          {bonus($entry.wisdom_misc_modifier.unconditional_modifier)}
        {/if}
      {/param}
    {/call}
    {call .ability}
      {param name: 'Charisma' /}
      {param abbreviation: 'CHA' /}
      {param total: $entry.total_charisma /}
      {param ability: annotate($entry.combined_charisma) /}
      {param racial: $entry.racial_charisma_modifier /}
      {param modifier: bonus($entry.charisma_modifier) /}
      {param misc kind="html"}
        {if $entry.charisma_misc_modifier.unconditional_modifier}
          {bonus($entry.charisma_misc_modifier.unconditional_modifier)}
        {/if}
      {/param}
    {/call}
  </div>
{/template}

/** The combat options box. */
{template .sheet_combat_options}
  {@param entry: ?}
  {@param size: number}
  {call .sheet_subtitle}
     {param title: 'Combat Options' /}
   {/call}

   {call dma.sheet.old_value}
     {param label: 'Base Attack Bonus' /}
     {param width: '100%' /}
     {param size: '14px' /}
     {param vSize: '20px' /}
     {param value: annotate($entry.combined_base_attack) /}
     {param prefix: true /}
     {param center: true /}
   {/call}

   {foreach $weapon in $entry.weapons}
     {if index($weapon) < $size}
       {call .sheet_weapon}
         {param gray: index($weapon) % 2 == 0 /}
         {param weapon: $weapon /}
       {/call}
     {/if}
   {/foreach}
   {for $i in range(length($entry.weapons), $size)}
     {call .sheet_weapon}
       {param gray: $i % 2 == 0 /}
     {/call}
   {/for}
{/template}

/** The hit points box. */
{template .sheet_hit_points}
  {@param entry: ?}
  {@param break: number}
  {call .sheet_subtitle}
    {param title: 'Hit Points' /}
    {param nologo: true /}
  {/call}

  <div class="values boxed" style="flex: 5;">
    <div class="hps temporary">
      Temporary<br/>
      {for $i in range(20)}
        <div class="count">{20 - $i}</div>
        {if $i % $break == 0}
          <br/>
        {/if}
      {/for}
    </div>
    <div class="hps">
      Hit Points<br/>
      {for $i in range($entry.maxHP - $entry.HP)}
        <div class="count crossed">{$entry.maxHP - $i}</div>
        {if ($entry.maxHP - $i) % $break == 0}
          <br/>
        {/if}
      {/for}
      {for $i in range($entry.HP + 1)}
        <div class="count">{$entry.HP - $i}</div>
        {if ($entry.HP - $i) % $break == 0}
          <br/>
        {/if}
      {/for}
    </div>
    <div class="hps negative">
      {for $i in range(1, 11)}
        <div class="count">{-$i}</div>
        {if $i % $break == 0}
          <br/>
        {/if}
      {/for}
    </div>
  </div>
{/template}

/** The special attacks box. */
{template .sheet_ability_modifiers}
  {@param entry: ?}
  {call .sheet_subtitle}
    {param title: 'Ability Modifiers' /}
    {param nologo: true /}
  {/call}

  <div class="values boxed" style="flex: 1;">
     {if $entry.strength.get.has_value
         and $entry.strength.get.has_any_condition}
       <div>
         STR:{sp}
         {call dma.value.modifier}
           {param modifier: $entry.strength.get /}
           {param only_conditionals: true /}
         {/call}
       </div>
    {/if}
     {if $entry.dexterity.get.has_value
         and $entry.dexterity.get.has_any_condition}
       <div>
         DEX:{sp}
         {call dma.value.modifier}
           {param modifier: $entry.dexterity.get /}
           {param only_conditionals: true /}
         {/call}
       </div>
    {/if}
     {if $entry.constitution.get.has_value
         and $entry.constitution.get.has_any_condition}
       <div>
         CON:{sp}
         {call dma.value.modifier}
           {param modifier: $entry.constitution.get /}
           {param only_conditionals: true /}
         {/call}
       </div>
    {/if}
     {if $entry.intelligence.get.has_value
         and $entry.intelligence.get.has_any_condition}
       <div>
         INT:{sp}
         {call dma.value.modifier}
           {param modifier: $entry.intelligence.get /}
           {param only_conditionals: true /}
         {/call}
       </div>
    {/if}
     {if $entry.wisdom.get.has_value
         and $entry.wisdom.get.has_any_condition}
       <div>
         WIS:{sp}
         {call dma.value.modifier}
           {param modifier: $entry.wisdom.get /}
           {param only_conditionals: true /}
         {/call}
       </div>
    {/if}
     {if $entry.charisma.get.has_value
         and $entry.charisma.get.has_any_condition}
       <div>
         CHA:{sp}
         {call dma.value.modifier}
           {param modifier: $entry.charisma.get /}
           {param only_conditionals: true /}
         {/call}
       </div>
    {/if}
  </div>
{/template}

/** The special attacks box. */
{template .sheet_special_attacks}
  {@param entry: ?}
  {call .sheet_subtitle}
    {param title: 'Special Attacks' /}
    {param nologo: true /}
  {/call}

  <div class="values boxed" style="flex: 1;">
     {if $entry.attackModifier.get.present
         and $entry.attackModifier.get.get.has_value}
       <div><b>Attack</b> <br />{annotate($entry.attackModifier)}</div>
    {/if}
    {if $entry.damageModifier.get.present
        and $entry.damageModifier.get.get.has_value}
       <div style="margin-top:10px">
         <b>Damage</b> </br> {annotate($entry.damageModifier)}
       </div>
    {/if}
  </div>
{/template}

/** The special defenses box. */
{template .sheet_special_defenses}
  {call .sheet_subtitle}
    {param title: 'Special Defenses' /}
    {param nologo: true /}
  {/call}

  <div class="values boxed" style="flex: 1;"></div>
{/template}

/**
 * The hit points box.
 *
 * @param entry
 */
{template .sheet_speed}
  <div class="inline" style="width: 50%">
    {call dma.sheet.old_value}
      {param label: 'Speed' /}
      {param width: '100%' /}
      {param size: '14px' /}
      {param vSize: '20px' /}
      {param value kind="html"}
        {if isList($entry.speeds_annotated)}
          {foreach $speed in $entry.speeds_annotated}
            {annotate($speed)}
            {if not isLast($speed)}, {/if}
          {/foreach}
        {/if}
      {/param}
      {param prefix: true /}
      {param center: true /}
    {/call}
  </div>

  <div class="inline" style="width: 50%">
    {call dma.sheet.old_value}
      {param label: 'Initiative Modifier' /}
      {param width: '100%' /}
      {param size: '14px' /}
      {param vSize: '20px' /}
      {param value: bonus($entry.initiative) /}
      {param prefix: true /}
      {param center: true /}
    {/call}
  </div>

  <div class="value-container" style="width:100%">
    <div class="value-label prefixed inline"
         style="font-size: 14px; vertical-align:top; padding-top: 3px">
      Grapple Modifier
    </div>

    {call dma.sheet.old_value}
      {param label kind="html"}
       Total <br/>
       &nbsp;
      {/param}
      {param width: '13.5%' /}
      {param size: '9px' /}
      {param center: true /}
      {param value: bonus($entry.grapple_bonus) /}
    {/call}

    <div class="operator" style="padding-top: 15px">=</div>

    {call dma.sheet.old_value}
      {param label kind="html"}
        Base Attack <br/>
        Bonus
      {/param}
      {param width: '13.5%' /}
      {param size: '9px' /}
      {param center: true /}
      {param value: annotate($entry.combined_base_attack) /}
    {/call}

    <div class="operator" style="padding-top: 15px">+</div>

    {call dma.sheet.old_value}
      {param label kind="html"}
        Strength<br/>
        Modifier
      {/param}
      {param width: '13.5%' /}
      {param size: '9px' /}
      {param center: true /}
      {param value: bonus($entry.strength_modifier) /}
    {/call}
    <div class="operator" style="padding-top: 15px">+</div>

    {call dma.sheet.old_value}
      {param label kind="html"}
        Size<br/>
        Modifier
      {/param}
      {param width: '13.5%' /}
      {param size: '9px' /}
      {param center: true /}
      {param value: '+0' /}
    {/call}

    <div class="operator" style="padding-top: 15px">+</div>

    {call dma.sheet.old_value}
      {param label kind="html"}
        Misc<br/>
        Modifier
      {/param}
      {param width: '13.5%' /}
      {param size: '9px' /}
      {param center: true /}
      {param value: '' /}
    {/call}
  </div>
{/template}

/**
 * The hit saving throws box.
 *
 * @param entry
 */
{template .sheet_saves}
  {call .sheet_subtitle}
    {param title: 'Saving Throws' /}
  {/call}

  <div class="sheet-row">
    <div class="saves sheet-column flex-4">
      {call .sheet_saves_value}
        {param name: 'Fortitude' /}
        {param ability: 'Constitution' /}
        {param value: value($entry.fortitude_save, 'no_conditions') /}
        {param base: annotate($entry.combined_base_fortitude_save) /}
        {param racial: $entry.racial_fortitude_modifier /}
        {param ability_modifier: bonus($entry.constitution_modifier) /}
        {param misc: $entry.misc_fortitude_modifier /}
      {/call}

      {call .sheet_saves_value}
        {param name: 'Reflex' /}
        {param ability: 'Dexterity' /}
        {param racial: $entry.racial_reflex_modifier /}
        {param value: value($entry.reflex_save, 'no_conditions') /}
        {param base: annotate($entry.combined_base_reflex_save) /}
        {param ability_modifier: bonus($entry.dexterity_modifier) /}
        {param misc: $entry.misc_reflex_modifier /}
      {/call}

      {call .sheet_saves_value}
        {param name: 'Will' /}
        {param ability: 'Wisdom' /}
        {param racial: $entry.racial_will_modifier /}
        {param value: value($entry.will_save, 'no_conditions') /}
        {param base: annotate($entry.combined_base_will_save) /}
        {param ability_modifier: bonus($entry.wisdom_modifier) /}
        {param misc: $entry.misc_will_modifier /}
      {/call}
    </div>

    <div class="box sheet-column"
         style="display: flex; flex-direction: column;">
      <div>
        Conditional Modifiers
      </div>
      <div style="flex: 1;">
        {if $entry.reflex_save.get.has_value and
            $entry.reflex_save.get.has_any_condition}
          Ref:{sp}
          {call dma.value.modifier}
            {param modifier: $entry.reflex_save.get /}
            {param only_conditionals: true /}
          {/call}
        {/if}
      </div>
      <div style="flex: 1;">
        {if $entry.fortitude_save.get.has_value and
            $entry.fortitude_save.get.has_any_condition}
          For:{sp}
          {call dma.value.modifier}
            {param modifier: $entry.fortitude_save.get /}
            {param only_conditionals: true /}
          {/call}
        {/if}
      </div>
      <div style="flex: 1;">
        {if $entry.will_save.get.has_value and
            $entry.will_save.get.has_any_condition}
          Will:{sp}
          {call dma.value.modifier}
            {param modifier: $entry.will_save.get /}
            {param only_conditionals: true /}
          {/call}
        {/if}
      </div>
    </div>
  </div>

{/template}

/** A single saving throw value. */
{template .sheet_saves_value}
  {@param name: string}
  {@param ability: string}
  {@param value: string}
  {@param base: string}
  {@param ability_modifier: string}
  {@param racial: ?}
  {@param misc: ?}
  {@param? short: bool}
  <div class="sheet-row">
    <div class="two-line-label"
         style="width: {if $short}59{else}15{/if}%;
                padding-top: {if $short}22{else}30{/if}px">
      <div class="top" style="font-size: 12px">{$name}</div>
      <div class="bottom">({$ability})</div>
    </div>

    {call dma.sheet.old_value}
      {param label kind="html"}
         <br/>
         Total
      {/param}
      {param width: $short ? '30%' : '12.5%' /}
      {param size: '8px' /}
      {param center: true /}
      {param white: true /}
      {param top: true /}
      {param value: $value /}
    {/call}

    {if not $short}
      <div class="operator" style="padding-top: 30px">=</div>

      {call dma.sheet.old_value}
        {param label kind="html"}
          Base <br/>
          Save
        {/param}
        {param width: '12.5%' /}
        {param size: '8px' /}
        {param center: true /}
        {param white: true /}
        {param top: true /}
        {param value: $base /}
      {/call}

      <div class="operator" style="padding-top: 30px">+</div>

      {call dma.sheet.old_value}
        {param label kind="html"}
          Ability <br/>
          Modifier
        {/param}
        {param width: '12.5%' /}
        {param size: '8px' /}
        {param center: true /}
        {param white: true /}
        {param top: true /}
        {param value: $ability_modifier /}
      {/call}

      <div class="operator" style="padding-top: 30px">+</div>

      {call dma.sheet.old_value}
        {param label kind="html"}
          Magic <br/>
          Modifier
        {/param}
        {param width: '12.5%' /}
        {param size: '8px' /}
        {param center: true /}
        {param white: true /}
        {param top: true /}
        {param value: '' /}
      {/call}

      <div class="operator" style="padding-top: 30px">+</div>

      {call dma.sheet.old_value}
        {param label kind="html"}
          Misc. <br/>
          Modifier
        {/param}
        {param width: '12.5%' /}
        {param size: '8px' /}
        {param center: true /}
        {param white: true /}
        {param top: true /}
        {param lineHeight: '6px' /}
        {param value kind="html"}
           {if $racial.unconditional_modifier}
             {bonus($racial.unconditional_modifier)}
            {/if}
            {if $misc.unconditional_modifier}
              {bonus($misc.unconditional_modifier)}
            {/if}
        {/param}
      {/call}

      <div class="operator" style="padding-top: 30px">+</div>

      {call dma.sheet.old_value}
        {param label kind="html"}
          Temporary <br/>
          Modifier
        {/param}
        {param width: '12.5%' /}
        {param size: '8px' /}
        {param center: true /}
        {param white: true /}
        {param top: true /}
        {param value: '' /}
      {/call}
    {/if}
    </div>
{/template}

/**
 * The armor class section of the character sheet.
 *
 * @param entry
 */
{template .sheet_ac}
  {call .sheet_subtitle}
    {param title: 'Armor Class' /}
  {/call}

  <div class="value-container" style="width:100%">
    <div class="value-label prefixed inline"
         style="font-size: 14px; vertical-align:top; padding-top: 3px">
      AC
    </div>

    {call dma.sheet.old_value}
      {param label kind="html"}
        Total <br/>
        &nbsp;
      {/param}
      {param width: '11%' /}
      {param size: '8px' /}
      {param vSize: '20px' /}
      {param center: true /}
      {param value: $entry.armor_class /}
    {/call}

    <div class="operator" style="padding-top: 15px">= 10 +</div>

    {call dma.sheet.old_value}
      {param label kind="html"}
        Armor <br/>
        Bonus
      {/param}
      {param width: '11%' /}
      {param size: '8px' /}
      {param vSize: '14px' /}
      {param center: true /}
      {param value: $entry.armor_bonus /}
    {/call}

    <div class="operator" style="padding-top: 15px">+</div>

    {call dma.sheet.old_value}
      {param label kind="html"}
        Shield<br/>
        Bonus
      {/param}
      {param width: '11%' /}
      {param size: '8px' /}
      {param vSize: '14px' /}
      {param center: true /}
      {param value: $entry.shield_bonus /}
    {/call}

    <div class="operator" style="padding-top: 15px">+</div>

    {call dma.sheet.old_value}
      {param label kind="html"}
        Dex<br/>
        Modifier
      {/param}
      {param width: '11%' /}
      {param size: '8px' /}
      {param vSize: '14px' /}
      {param center: true /}
      {param value: bonus($entry.dexterity_modifier) /}
    {/call}

    <div class="operator" style="padding-top: 15px">+</div>

    {call dma.sheet.old_value}
      {param label kind="html"}
        Size<br/>
        Modifier
      {/param}
      {param width: '11%' /}
      {param size: '8px' /}
      {param vSize: '14px' /}
      {param center: true /}
      {param value: '+0' /}
    {/call}

    <div class="operator" style="padding-top: 15px">+</div>

    {call dma.sheet.old_value}
      {param label kind="html"}
        Natural <br/>
        Armor
      {/param}
      {param width: '11%' /}
      {param size: '8px' /}
      {param vSize: '14px' /}
      {param center: true /}
      {param value: annotate($entry.combined_natural_armor) /}
    {/call}

    <div class="operator" style="padding-top: 15px">+</div>

    {call dma.sheet.old_value}
      {param label kind="html"}
        Deflection <br/>
        Modifier
      {/param}
      {param width: '11%' /}
      {param size: '8px' /}
      {param vSize: '14px' /}
      {param center: true /}
      {param value: '' /}
    {/call}

    <div class="operator" style="padding-top: 15px">+</div>

    {call dma.sheet.old_value}
      {param label kind="html"}
        Miscellaneous <br/>
        Modifiers
      {/param}
      {param width: '11%' /}
      {param size: '8px' /}
      {param vSize: '14px' /}
      {param center: true /}
      {param value: '' /}
    {/call}
  </div>


  <div class="sheet-row">
    <div class="sheet-column">
      {call dma.sheet.old_value}
        {param label: 'Touch AC' /}
        {param width: '100%' /}
        {param size: '14px' /}
        {param vSize: '20px' /}
        {param value: $entry.touch_armor_class /}
        {param prefix: true /}
        {param center: true /}
      {/call}
    </div>

    <div class="sheet-column">
      {call dma.sheet.old_value}
        {param label: 'Flat-Footed AC' /}
        {param width: '100%' /}
        {param size: '14px' /}
        {param vSize: '20px' /}
        {param value: $entry.flat_footed_armor_class /}
        {param prefix: true /}
        {param center: true /}
      {/call}
    </div>
  </div>

  <div class="armors" style="margin-top: 10px">
    <div class="armor">
      {call dma.sheet.old_value}
        {param label: 'Armor Worn' /}
        {param width: '50%' /}
        {param size: '7px' /}
        {param white: true /}
        {param top: true /}
        {param inside: true /}
        {param value kind="html"}
          {if $entry.armor_worn.present}
            {call dma.entries.items.name}
              {param entry: $entry.armor_worn /}
            {/call}
          {/if}
        {/param}
      {/call}
      {call dma.sheet.old_value}
        {param label: 'Max Dex' /}
        {param width: '20%' /}
        {param size: '7px' /}
        {param white: true /}
        {param top: true /}
        {param inside: true /}
        {param value: $entry.armor_worn.present
          ? annotate($entry.armor_worn.combined_max_dex) : '' /}
      {/call}
      {call dma.sheet.old_value}
        {param label: 'Armor Check Penalty' /}
        {param width: '20%' /}
        {param size: '7px' /}
        {param white: true /}
        {param top: true /}
        {param inside: true /}
        {param value: $entry.armor_worn.present
          ? annotate($entry.armor_worn.combined_check_penalty) : '' /}
      {/call}
      {call dma.sheet.old_value}
        {param label: 'Weight' /}
        {param width: '10%' /}
        {param size: '7px' /}
        {param white: true /}
        {param top: true /}
        {param inside: true /}
        {param value: $entry.armor_worn.present
          ? annotate($entry.armor_worn.combined_weight) : '' /}
      {/call}
    </div>
    <div class="armor">
      {call dma.sheet.old_value}
        {param label: 'Shield Carried' /}
        {param width: '50%' /}
        {param size: '7px' /}
        {param white: true /}
        {param top: true /}
        {param inside: true /}
        {param value kind="html"}
          {if $entry.shield_worn.present}
            {call dma.entries.items.name}
              {param entry: $entry.shield_worn /}
            {/call}
          {/if}
        {/param}
      {/call}
      {call dma.sheet.old_value}
        {param label: 'Max Dex' /}
        {param width: '20%' /}
        {param size: '7px' /}
        {param white: true /}
        {param top: true /}
        {param inside: true /}
        {param value: $entry.shield_worn.present
          ? annotate($entry.shield_worn.combined_max_dex) : '' /}
      {/call}
      {call dma.sheet.old_value}
        {param label: 'Armor Check Penalty' /}
        {param width: '20%' /}
        {param size: '7px' /}
        {param white: true /}
        {param top: true /}
        {param inside: true /}
        {param value: $entry.shield_worn.present
          ? annotate($entry.shield_worn.combined_check_penalty) : '' /}
      {/call}
      {call dma.sheet.old_value}
        {param label: 'Weight' /}
        {param width: '10%' /}
        {param size: '7px' /}
        {param white: true /}
        {param top: true /}
        {param inside: true /}
        {param value: $entry.shield_worn.present
          ? annotate($entry.shield_worn.combined_weight) : '' /}
      {/call}
    </div>
  </div>
{/template}

/** Sheet with combat options and abilities. */
{template .sheet_page_combat}
  {@param entry: ?}
  <div class="sheet-column">
  <div class="sheet-row">
    <div class="sheet-column flex-4" style="margin-right: 5px;">
      {call .sheet_combat_options}
        {param entry: $entry /}
        {param size: 12 /}
      {/call}
    </div>
    <div class="sheet-column" style="flex: 1">
      {call .sheet_special_attacks}
        {param entry: $entry /}
      {/call}

      {call .sheet_hit_points}
        {param entry: $entry /}
        {param break: 5 /}
      {/call}
    </div>
  </div>
  <div class="sheet-row" style="margin-top: 5px;">
    <div class="sheet-column flex-4">
      {call .sheet_ac}
        {param entry: $entry /}
      {/call}
    </div>
    <div class="sheet-column">
      {call .sheet_special_defenses}
        {param entry: $entry /}
      {/call}
    </div>
  </div>
  </div>
{/template}

/**
 * Contents of the second page of the character sheet.
 *
 * @param entry the entry to print
 */
{template .sheet_page_2}
  <div class="sheet-row" style="height: 100%;">
    <div class="sheet-column" style="height: 100%; margin-right: 5px;">
      <div class="sheet-row" style="flex-direction: column; height: 100%;">
        <div class="sheet-column"
             style="display: flex; flex-direction: column; flex: 1;">
          {call .sheet_xp}
            {param entry: $entry /}
          {/call}
        </div>

        {call .sheet_carrying_capacity}
          {param entry: $entry /}
        {/call}
      </div>
    </div>
    <div class="sheet-column" style="flex: 4;">
      <div class="sheet-row" style="flex-direction: column; height: 29.7cm">
        {call .sheet_subtitle}
          {param title: 'Gear' /}
        {/call}

        {call .sheet_gear}
          {param entry: $entry /}
        {/call}

        {call .sheet_magical_items}
          {param entry: $entry /}
        {/call}

        {call .sheet_money}
          {param entry: $entry /}
        {/call}
      </div>
    </div>
  </div>
{/template}

/**
 * Contents of the third page of the character sheet.
 *
 * @param entry the entry to print
 */
{template .sheet_page_3}
  <div class="sheet-row" style="height: 100%;">
    <div class="sheet-column" style="height: 100%; margin-right: 5px;">
      {call .sheet_skills}
        {param entry: $entry /}
      {/call}
    </div>
    <div class="sheet-column column flex"
         style="height: 100%">
      <div class="flex">
        {call .sheet_racial_traits}
          {param entry: $entry /}
        {/call}
      </div>

      <div style="flex: 5; margin-top: 20px">
        {call .sheet_class_features}
          {param entry: $entry /}
        {/call}
      </div>

      <div class="flex" style="margin-top: 20px">
        {call .sheet_feats}
          {param entry: $entry /}
        {/call}
      </div>

      <div class="flex" style="margin-top: 20px">
        {call .sheet_languages}
          {param entry: $entry /}
        {/call}
      </div>

      <div class="flex" style="margin-top: 20px">
        {call .sheet_spells}
          {param entry: $entry /}
        {/call}
      </div>
    </div>
  </div>
{/template}

/** Contents of the fourth page of the character sheet. */
{template .sheet_page_4}
  //{@param entry: ?}
{/template}

/** Contents of the spells page of the character sheet. */
{template .sheet_page_spells}
  {@param entry: ?}

  {call .sheet_subtitle}
    {param title: 'Spells' /}
  {/call}

  <table style="padding-bottom: 20px">
    <tr class="bold">
      <td>Name</td>
      <td>Level</td>
      <td>School</td>
      <td>Comp.</td>
      <td>Cast.</td>
      <td>Range</td>
      <td>Target</td>
      <td>Duration</td>
      <td>Save</td>
      <td>SR</td>
      <td>Description</td>
    </tr>

    {foreach $spell in $entry.spells_known}
      {call .sheet_spell_line}
        {param character: $entry /}
        {param spell: $spell /}
      {/call}
    {/foreach}
  </table>
{/template}

/** A single line with a spell description. */
{template .sheet_spell_line}
  {@param spell: ?}
  <tr style="vertical-align: top">
    <td>{$spell.name}</td>
    <td>{$spell.level}</td>
    <td>
      {$spell.school}

      {if length($spell.subschools) > 0}
        {sp}(
        {foreach $subschool in $spell.subschools}
          {$subschool}{if not isLast($subschool)}, {/if}
        {/foreach}
        )
      {/if}
    </td>
    <td>
      {foreach $component in $spell.components}
        {$component.short}{if not isLast($component)}, {/if}
      {ifempty}
        &ndash;
      {/foreach}
    </td>
    <td>
      {if $spell.casting_time.present}
        {$spell.casting_time.get.short_string}
      {/if}
    </td>
    <td>{$spell.range}</td>
    <td>
      {if $spell.target.present}
        {$spell.target}
      {/if}
    </td>
    <td>{$spell.duration_string}</td>
    <td>{$spell.dc}</td>
    <td>
      {if $spell.spell_resistance.present}
        {$spell.spell_resistance}
      {/if}
    </td>
    <td>{commands($spell.short_description)}</td>
  </tr>
{/template}

/** The spells box. */
{template .sheet_spells}
  {@param entry: ?}
  {call .sheet_subtitle}
    {param title: 'Spells' /}
  {/call}

  <div class="box sheet-column column"
       style="margin-bottom: 10px; min-height: 200px;">
    <div>
      Conditional Modifiers
    </div>
  </div>

  <div class="line">
    <div class="column flex" style="padding-right: 5px">
      <div class="line flex">
        <div class="bold flex">Level</div>
        <div class="flex">Spells<br/>Known</div>
        <div class="flex">Spell<br/> Save DC</div>
        <div class="flex">Spells/<br/>Day</div>
      </div>
      {for $i in range(5)}
        {call .sheet_spell_level}
          {param entry: $entry /}
          {param level: $i /}
        {/call}
      {/for}
    </div>

    <div class="column flex" style="padding-left: 5px">
      <div class="line flex">
        <div class="bold flex">Level</div>
        <div class="flex">Spells<br/>Known</div>
        <div class="flex">Spell<br/> Save DC</div>
        <div class="flex">Spells/<br/>Day</div>
      </div>
      {for $i in range(5, 10)}
        {call .sheet_spell_level}
          {param entry: $entry /}
          {param level: $i /}
        {/call}
      {/for}
    </div>
  </div>
{/template}

/** A line with information about a spell level. */
{template .sheet_spell_level}
  {@param entry: ?}
  {@param level: number}
  <div class="line flex">
    <div class="flex box">{$level}</div>
    <div class="flex box">
      {if call($entry, 'spellsKnown', $level) >= 0}
        {call($entry, 'spellsKnown', $level)}
      {else}
        &ndash;
      {/if}
    </div>
    <div class="flex box">{call($entry, 'spellSaveDC', $level)}</div>
    <div class="flex box">
      {if call($entry, 'spellsPerDay', $level) >= 0}
        {call($entry, 'spellsPerDay', $level)}
      {else}
        &ndash;
      {/if}
    </div>
  </div>
{/template}

/** The langauges box. */
{template .sheet_languages}
  {@param entry: ?}
  {call .sheet_subtitle}
    {param title: 'Languages' /}
  {/call}

  {annotate($entry.combined_languages)}

{/template}

/** The feats box. */
{template .sheet_feats}
  {@param entry: ?}
  {call .sheet_subtitle}
    {param title: 'Feats' /}
  {/call}

  {foreach $feat in $entry.combined_feats.get}
    <div class="feat">
      {call dma.entries.feats.summary}
        {param entry: $feat /}
      {/call}
    </div>
  {/foreach}
{/template}

/** The class features box. */
{template .sheet_class_features}
  {@param entry: ?}
  {call .sheet_subtitle}
    {param title: 'Class Features' /}
  {/call}

  <div class="quality">
    <b>Weapon proficiencies: </b>
    {annotate($entry.weapon_proficiencies)}
  </div>
  <div class="quality">
    <b>Armor proficiencies: </b>
    {annotate($entry.armor_proficiencies)}
  </div>

  {foreach $quality in $entry.class_qualities.get}
    <div class="quality">
      {call dma.entries.qualities.summary}
        {param entry: $quality /}
      {/call}
    </div>
  {/foreach}
{/template}

/** The racial traits box. */
{template .sheet_racial_traits}
  {@param entry: ?}
  {call .sheet_subtitle}
    {param title: 'Racial Traits' /}
  {/call}

  {foreach $quality in $entry.racial_qualities.get}
    <div class="quality">
      {call dma.entries.qualities.summary}
        {param entry: $quality /}
      {/call}
    </div>
  {/foreach}

  <div class="unused">
    // unused qualities
    {if length($entry.unused_qualities)}
      (unused{sp}
      {foreach $quality in $entry.unused_qualities}
        {$quality}
        {if not isLast($quality)}, {/if}
      {/foreach})
    {/if}
  </div>
{/template}

/** The skills box. */
{template .sheet_skills}
  {@param entry: ?}
  {call .sheet_subtitle}
    {param title: 'Skills' /}
  {/call}

  <div class="skill-line skill-title">
    <span class="class-skill">
      CS?
    </span>
    <span class="skill-name">
      Skill Name
    </span>
    <span class="skill-key">
      Key<br/>Ability
    </span>
    <span class="skill-modifier">
      Skill<br/>Modifier
    </span>
    &nbsp;
    <span class="skill-ranks">
      Ranks<br/>(max {$entry.max_skill_ranks})
    </span>
    &nbsp;
    <span class="skill-ability">
      Ability<br/>Modifier
    </span>
    &nbsp;
    <span class="skill-misc">
      Misc<br/>Modifier
    </span>
  </div>

  {foreach $skill in $ij.BaseSkill.all_skills}
    {if not $skill.subtype_only}
      {call .sheet_skill}
        {param skill: $skill /}
        {param classSkill: call($entry, 'isClassSkill', $skill.name) /}
        {param ability: $skill.combined_ability.get.present
          ? bonus(call($entry, 'abilityModifier',
                       $skill.combined_ability.get.get))
          : '+0' /}
        {param ranks: call($entry, 'skillRanks', $skill.name) /}
        {param total: call($entry, 'skillModifier', $skill.name, $skill.ability) /}
        {param misc: call($entry, 'miscModifier', $skill.name) /}
      {/call}
    {/if}
  {/foreach}

  {if not $entry.total_used_skill_ppints == $entry.total_skill_points}
    <div class="skill-line skill-title">
      <span class="class-skill">
      </span>
      <span class="skill-name">
      </span>
      <span class="skill-key">
      </span>
      <span class="skill-modifier">
      </span>
      &nbsp;
      <span class="skill-ranks skill-total">
        {$entry.total_used_skill_points}/{$entry.total_skill_points}
      </span>
      &nbsp;
      <span class="skill-ability">
      </span>
      &nbsp;
      <span class="skill-misc">
      </span>
    </div>
  {/if}

{/template}

/** A single skill line. */
{template .sheet_skill}
  {@param skill: ?}
  {@param? classSkill: bool}
  {@param? total: string}
  {@param? ranks: string}
  {@param? ability: any}
  {@param? misc: ?}
  <div class="skill-line
    {if not $skill.is_untrained and not $ranks} unavailable{/if}">
    <span class="class-skill">
      {if $classSkill}
        &#x2612{sp}
      {else}
        &#x2610{sp}
      {/if}
    </span>
    <a class="skill-name" href="{$skill.path}">
      {$skill.name}
      {if $skill.is_ntrained}
        {sp}<span style="font-size: 8px">&diams;</span>
      {/if}
      {if $skill.armor_check_penalty}
        {sp}*
      {/if}
    </a>
    <span class="skill-key">
      {$skill.combined_ability.get.short}
    </span>
    <span class="skill-modifier">
      {bonus($total)}
    </span>
    =
    <span class="skill-ranks">
      {if $ranks}
        {$ranks}
      {/if}
    </span>
    +
    <span class="skill-ability">
      {if $ability}
        {$ability}
      {/if}
    </span>
    +
    <span class="skill-misc">
      {if $misc and $misc.modifier}
        {call dma.value.modifier}
          {param modifier: $misc /}
        {/call}
      {/if}
    </span>
 </div>
{/template}

/**
 * The experience point box.
 *
 * @param entry the entry to print
 */
{template .sheet_xp}
  {call .sheet_subtitle}
    {param title: 'XP' /}
    {param nologo: true /}
  {/call}

  <div class="values boxed" style="background-color: #eee; flex: 1;">
    <div class="xp">
      {$entry.XP}
    </div>
    <div class="xp-next">
      Level {$entry.effectiveCharacterLevel + 1}: {$entry.nextLevelXP}
    </div>
  </div>
{/template}

/**
 * The carrying capacity box.
 *
 * @param entry the entry to print
 */
{template .sheet_carrying_capacity}
  {call .sheet_subtitle}
    {param title: 'Carrying Capacity' /}
    {param nologo: true /}
  {/call}

  <div class="values boxed carrying-capacity"
       style="background-color: #eee;">
    {call dma.sheet.old_value}
      {param label kind="html"}
        Light<br />
        Load
      {/param}
      {param width: '100%' /}
      {param size: '9px' /}
      {param prefix: true /}
      {param center: true /}
      {param value kind="html"}
        up to {$entry.light_load} lb
      {/param}
    {/call}
    {call dma.sheet.old_value}
      {param label kind="html"}
        Medium<br />
        Load
      {/param}
      {param width: '100%' /}
      {param size: '9px' /}
      {param prefix: true /}
      {param center: true /}
      {param value kind="html"}
        up to {$entry.medium_load} lb
      {/param}
    {/call}
    {call dma.sheet.old_value}
      {param label kind="html"}
        Heavy<br />
        Load
      {/param}
      {param width: '100%' /}
      {param size: '9px' /}
      {param prefix: true /}
      {param center: true /}
      {param value kind="html"}
        up to {$entry.heavy_load} lb
      {/param}
    {/call}
    {call dma.sheet.old_value}
      {param label kind="html"}
        Lift
      {/param}
      {param width: '100%' /}
      {param size: '9px' /}
      {param prefix: true /}
      {param center: true /}
      {param value kind="html"}
        up to {$entry.lift_load}
      {/param}
    {/call}
    {call dma.sheet.old_value}
      {param label kind="html"}
        Drag
      {/param}
      {param width: '100%' /}
      {param size: '9px' /}
      {param prefix: true /}
      {param center: true /}
      {param value kind="html"}
        up to {$entry.drag_load}
      {/param}
    {/call}
    {call dma.sheet.old_value}
      {param label kind="html"}
        Current<br />
        Load
      {/param}
      {param width: '100%' /}
      {param size: '9px' /}
      {param prefix: true /}
      {param center: true /}
      {param value kind="html"}
        {$entry.current_load}
        {if $entry.current_load.as_pounds.float > $entry.light_load}
          <br/><span style="font-size: 8px">(
            {if $entry.current_load.as_pounds.float <= $entry.medium_load}
              medium load: max dex +3, speed from 30/20 ft to 20/15 ft, run x4
            {elseif $entry.current_load.as_pounds.float <= $entry.heavy_load}
              heavy load: max dex +1, speed from 30/20 ft to 20/15 ft, run x3
            {else}
              too much load
            {/if}
          )</span>
        {/if}
      {/param}
    {/call}
  </div>
{/template}

/**
 * The gear box.
 *
 * @param entry the entry to print
 */
{template .sheet_gear}
  <div class="limited sheet-column" style="flex: 3 3 60%;">
    <div class="gear-title">Possessions on person</div>

    <div class="gear-line">
      <div class="gear-name">Item</div>
      <div class="gear-spacer"></div>
      <div class="gear-location">Location</div>
      <div class="gear-spacer"></div>
      <div class="gear-weight">Weight</div>
    </div>

    {foreach $item in $entry.possessions_on_person}
      {if not $item.shownAsWorn}
        {call .sheet_gear_line}
          {param item: $item /}
        {/call}
      {/if}
    {/foreach}

    <div class="gear-line">
      <div class="gear-name"></div>
      <div class="gear-spacer"></div>
      <div class="gear-location"></div>
      <div class="gear-spacer"></div>
      <div class="gear-weight">{$entry.weight_on_person} total</div>
    </div>

    {for $i in range(20)}
      {call .sheet_gear_line /}
    {/for}
  </div>

  <div class="limited sheet-column" style="flex: 2 2 40%;">
    <div class="gear-title">Possessions not on person</div>

    <div class="gear-line">
      <div class="gear-name">Item</div>
      <div class="gear-spacer"></div>
      <div class="gear-location">Location</div>
      <div class="gear-weight">Weight</div>
      <div class="gear-spacer"></div>
    </div>

    {foreach $item in $entry.possessions_not_on_person}
      {if not $item.weapon and not $item.armor}
        {call .sheet_gear_line}
          {param item: $item /}
        {/call}
      {/if}
    {/foreach}

    {for $i in range(20)}
      {call .sheet_gear_line /}
    {/for}
  </div>
{/template}

/**
 * The magical items per slot.
 *
 * @param entry the entry to print
 */
{template .sheet_magical_items}
  <div class="gear-title">Magic Items Worn</div>

  <div>
    {call .sheet_magical_item}
      {param title: 'Head' /}
      {param subtitle: 'Headband, Hat, Helment, or Pylactery' /}
      {param item: $entry.magical_item_on_head /}
    {/call}
    {call .sheet_magical_item}
      {param title: 'Hands' /}
      {param subtitle: 'Gloves or Gauntlets' /}
      {param item: $entry.magical_item_on_hands /}
    {/call}
  </div>

  <div>
    {call .sheet_magical_item}
      {param title: 'Eyes' /}
      {param subtitle: 'Eye Lenses or Goggles' /}
      {param item: $entry.magical_item_on_eyes /}
    {/call}
    {call .sheet_magical_item}
      {param title: 'Arms/Wrists' /}
      {param subtitle: 'Bracers or Bracelets' /}
      {param item: $entry.magical_item_on_wrists /}
    {/call}
  </div>

  <div>
    {call .sheet_magical_item}
      {param title: 'Neck' /}
      {param subtitle: 'Amulet, Brooch, Medallion, Periapt, or Scarab' /}
      {param item: $entry.magical_item_on_neck /}
    {/call}
    {call .sheet_magical_item}
      {param title: 'Body' /}
      {param subtitle: 'Robe or Suit of Armor' /}
      {param item: $entry.magical_item_on_body /}
    {/call}
  </div>

  <div>
    {call .sheet_magical_item}
      {param title: 'Shoulders' /}
      {param subtitle: 'Cloak, Cape, or Mantle' /}
      {param item: $entry.magical_item_on_houlders /}
    {/call}
    {call .sheet_magical_item}
      {param title: 'Torso' /}
      {param subtitle: 'Vest, Vestment, or Shirt' /}
      {param item: $entry.magical_item_on_torso /}
    {/call}
  </div>

  <div>
    {call .sheet_magical_item}
      {param title: 'Ring #1' /}
      {param subtitle: '' /}
      {param item: $entry.magical_item_on_ring_1 /}
    {/call}
    {call .sheet_magical_item}
      {param title: 'Waist' /}
      {param subtitle: 'Belt or Girdle' /}
      {param item: $entry.magical_item_on_waist /}
    {/call}
  </div>

  <div>
    {call .sheet_magical_item}
      {param title: 'Ring #2' /}
      {param subtitle: '' /}
      {param item: $entry.magical_item_on_ring_2 /}
    {/call}
    {call .sheet_magical_item}
      {param title: 'Feet' /}
      {param subtitle: 'Boots, Shoes, or Slippers' /}
      {param item: $entry.magical_item_on_feet /}
    {/call}
  </div>
{/template}

/**
 * The magical items per slot.
 *
 * @param entry the entry to print
 */
{template .sheet_money}
  <div class="gear-money">
    <div class="gear-title" style="text-align: center;">
      Money
    </div>

    <div style="margin-top: 5px;">
      On person:{sp}
      {foreach $item in $entry.moneyOnPerson}
        {call dma.entries.items.counted_reference}
          {param item: $item /}
        {/call}
        {if not isLast($item)}, {/if}
      {/foreach}
    </div>

    <div style="margin-top: 5px;">
      Not on person:{sp}
      {foreach $item in $entry.moneyNotOnPerson}
        {call dma.entries.items.counted_reference}
          {param item: $item /}
        {/call}
        {if not isLast($item)}, {/if}
      {/foreach}
    </div>
  </div>
{/template}

/**
 * Format a single magial item
 *
 * @param title
 * @param subtitle
 * @param item
 */
{template .sheet_magical_item}
    {call dma.sheet.old_value}
      {param label kind="html"}
        {$title}
        {if $subtitle}
          {sp}<span class="magical-subtitle">({$subtitle})</span>
        {/if}
      {/param}
      {param width: '50%' /}
      {param size: '10px' /}
      {param value kind="html"}
        {if $item.present}
          {call dma.entries.items.reference}
            {param entry: $item /}
          {/call}
        {else}
          &nbsp;
        {/if}
      {/param}
    {/call}
{/template}

/**
 * Print a gear line.
 *
 * @param? item
 */
{template .sheet_gear_line}
  {if $item}
    <div class="gear-line">
      <div class="gear-name">
        {call dma.entries.items.reference}
          {param entry: $item /}
        {/call}

        {if $item.multiuse.present and $item.multiuse.integer > 1}
          {sp}{$item.multiuse} {annotate($item.combined_count_unit)}
        {/if}
        {if $item.multiple.present and $item.multiple.integer > 1}
          {sp}x {$item.multiple}
        {/if}
      </div>
      <div class="gear-spacer"></div>
      <div class="gear-location">
        {if $item.container.present}
          {call dma.entries.items.reference}
            {param entry: $item.container /}
          {/call}
        {/if}
      </div>
      <div class="gear-spacer"></div>
      <div class="gear-weight">
        {annotate($item.combined_weight)}
      </div>
    </div>
  {else}
    <div class="gear-line">
      <div class="gear-name gear-empty"></div>
      <div class="gear-spacer"></div>
      <div class="gear-location gear-empty"></div>
      <div class="gear-spacer"></div>
      <div class="gear-weight gear-empty"></div>
    </div>
  {/if}
{/template}

/**
 * Print weapon information.
 * 
 * @param? gray whether to color the background
 * @param? weapon the weapon to print stats for
 */
{template .sheet_weapon}
  <div class="weapon {if $gray}gray{/if}">
    <div>
      {call dma.sheet.old_value}
        {param label: 'Weapon' /}
        {param width: '30%' /}
        {param size: '8px' /}
        {param vSize: '12px' /}
        {param value kind="html"}
          {if $weapon}
            {call dma.entries.items.reference}
              {param entry: $weapon /}
            {/call}
          {else}
            &nbsp;
          {/if}
        {/param}
      {/call}

      {call dma.sheet.old_value}
        {param label: 'Attack Bonus' /}
        {param width: '30%' /}
        {param size: '8px' /}
        {param vSize: '12px' /}
        {param value kind="html"}
           {if $weapon}
             {foreach $key in keys($weapon.attack_bonus)}
               {if $key}
                 {sp}{$key}
               {/if}
               {foreach $attack in $weapon.attack_bonus[$key]}
                 {bonus($attack)}
                 {if not isLast($attack)}/{/if}
               {/foreach}
               {if not isLast($key)}, {/if}
             {/foreach}
           {/if}
         {/param}
      {/call}

      {call dma.sheet.old_value}
        {param label: 'Damage' /}
        {param width: '20%' /}
        {param size: '8px' /}
        {param vSize: '12px' /}
        {param value: $weapon ? $weapon.damage : ' ' /}
      {/call}

      {call dma.sheet.old_value}
        {param label: 'Critical' /}
        {param width: '20%' /}
        {param size: '8px' /}
        {param vSize: '12px' /}
        {param value: $weapon and def($weapon.critical) ? $weapon.critical : ' ' /}
      {/call}
    </div>
    <div>
      {call dma.sheet.old_value}
        {param label: 'Range Increment' /}
        {param width: '30%' /}
        {param size: '8px' /}
        {param vSize: '12px' /}
        {param value: $weapon 
          ? (def($weapon.range) ? $weapon.range : '&mdash;') 
          : ' ' /}
      {/call}
      
      {call dma.sheet.old_value}
        {param label: 'Type' /}
        {param width: '20%' /}
        {param size: '8px' /}
        {param vSize: '12px' /}
        {param value: $weapon ? $weapon.weapon_type.short : ' ' /}
      {/call}

      {if $weapon.player_notes.present}
        {call dma.sheet.old_value}
          {param label: 'Notes' /}
          {param width: '50%' /}
          {param size: '8px' /}
          {param vSize: '12px' /}
          {param value: $weapon.player_notes /}
        {/call}
      {else}
        {if $weapon.available_ammunition}
          {call dma.sheet.old_value}
            {param label: 'Ammunition' /}
            {param width: '50%' /}
            {param size: '8px' /}
            {param vSize: '10px' /}
            {param value kind="html"}
              {foreach $ammunition in $weapon.available_ammunition}
                {call dma.entries.items.reference}
                  {param entry: $ammunition /}
                {/call}
                {sp}x {$ammunition.multiple}
                {if not isLast($ammunition)}, {/if}
              {/foreach}
            {/param}
          {/call}
        {else}
          {call dma.sheet.old_value}
            {param label: 'Notes' /}
            {param width: '50%' /}
            {param size: '8px' /}
            {param vSize: '12px' /}
            {param value: '' /}
          {/call}
        {/if}
      {/if}
    </div>
  </div>  

{/template}

/** Format the ability with all modifiers. */
{template .ability}
  {@param name: string}
  {@param abbreviation: string}
  {@param total: string}
  {@param ability: html|string}
  {@param modifier: html|string}
  {@param misc: html|string}
  {@param racial: ?}
  <div class="ability">
    <div class="two-line-label">
      <div class="top">{$abbreviation}</div>
      <div class="bottom">{$name}</div>
    </div>

    {call dma.sheet.old_value}
      {param label kind="html"}
        Total <br/>
        &nbsp;
      {/param}
      {param width: '12%' /}
      {param size: '6px' /}
      {param vSize: '14px' /}
      {param center: true /}
      {param value: $total /}
    {/call}
    
    <div class="operator">=</div>
    
    {call dma.sheet.old_value}
      {param label kind="html"}
        Base Score +<br/>
        Racial Mod.
      {/param}
      {param width: '13.5%' /}
      {param size: '6px' /}
      {param vSize: '14px' /}
      {param center: true /}
      {param value kind="html"}
        {$ability}{if $racial.has_value} {$racial}{/if}
      {/param}
    {/call}
    
    <div class="operator">+</div>
    
    {call dma.sheet.old_value}
      {param label kind="html"}
        Enhcmnt<br/>
        Bonuses
      {/param}
      {param width: '13.5%' /}
      {param size: '6px' /}
      {param vSize: '14px' /}
      {param center: true /}
      {param value: '' /}
    {/call}
  
    <div class="operator">+</div>
    
    {call dma.sheet.old_value}
      {param label kind="html"}
        Misc<br/>
        Bonuses
      {/param}
      {param width: '13.5%' /}
      {param size: '6px' /}
      {param vSize: '14px' /}
      {param lineHeight: '6px' /}
      {param center: true /}
      {param value: $misc /}
    {/call}
  
    <div class="operator">-</div>
    
    {call dma.sheet.old_value}
      {param label kind="html"}
        Misc<br/>
        Penalties
      {/param}
      {param width: '13.5%' /}
      {param size: '6px' /}
      {param vSize: '14px' /}
      {param center: true /}
      {param value: '' /}
    {/call}

    {call dma.sheet.old_value}
      {param label kind="html"}
        {$name}<br/>
        Modifier
      {/param}
      {param width: '13.5%' /}
      {param size: '6px' /}
      {param vSize: '14px' /}
      {param center: true /}
      {param boxed: true /}
      {param value: $modifier /}
    {/call}
  </div>
{/template}

/** Print a subtitle for the character sheet. */
{template .sheet_subtitle}
  {@param title: string}
  {@param? width: string}
  {@param? nologo: bool}
  {@param? nopadding: bool}
  <div class="{if $nopadding}nopadding {/if}subtitle"
      {if $width}style="width:{$width}"{/if}>
    {if not $nologo}<div class="subtitle-logo"></div>{/if}
    <div class="subtitle-text{if $nologo} nologo{/if}">{$title}</div>
  </div>
{/template}

/**
 * Formatting a list of entries.
 *
 * @param title The list title.
 * @param start The start index
 * @param pagesize The size of the page
 * @param entries The entries printed
 * @param label The navigation label for this page
 * @param path The path to this page
 *
 */
{template .list}
  {call dma.entry.newlist}
    {param title: $title /}
    {param label: $label /}
    {param path: $path /}
    {param start: $start /}
    {param pagesize: $pagesize /}
    {param size: $entries ? length($entries) : 0 /}
    {param titles: [ 'Name', 'Player'] /}
    {param entries kind="html"}
      {foreach $entry in $entries}
        <tr onclick="util.link(event, '{$entry.path}')">
          {call dma.entry.listEntry}
            {param path: $entry.path /}
            {param values: [
              $entry.name, $entry.bases
            ] /}
          {/call}
        </tr>
      {/foreach}
    {/param}
  {/call}
{/template}

/**
 * Editiing the base character.
 * 
 * @param entry   The character to edit. 
 * @param id      The id to use for the editing dialog.
 * @param create  Whether to create a new entry
 */
{template .edit}
  {call dma.edit.entry}
    {param entry: $entry /}
    {param type: 'product' /}
    {param id: $id /}
    {param create: $create /}
    {param values kind="html"}
      {call dma.edit.value}
        {param name: 'name' /}
        {param label: 'Name' /}
        {param value: $entry.name /}
        {param validate: 'non-empty' /}
        {param color: '#39f' /}
      {/call}    
      {call dma.edit.value}
        {param name: 'player' /}
        {param label: 'Player' /}
        {param value: $entry.base_character_name /}
        {param validate: 'non-empty' /}
        {param color: '#39f' /}
        {param autocomplete: 'base character/name' /}
      {/call}    
      {call dma.edit.value_selection}
        {param name: 'gender' /}
        {param label: 'Gender' /}
        {param value: $entry.gender.string /}
        {param choices: $ij.Gender.names /}
        {param color: '#39f' /}
      {/call}
      {call dma.edit.value}
        {param name: 'xp' /}
        {param label: 'XP' /}
        {param value: $entry.XP /}
        {param validate: 'number' /}
        {param color: '#39f' /}
      {/call}
      {call dma.edit.value}
        {param name: 'hp' /}
        {param label: 'Hit Points' /}
        {param value: $entry.HP /}
        {param validate: 'number' /}
        {param color: '#39f' /}
      {/call}
      {call dma.edit.generic_value}
        {param label: 'Abilites' /}
        {param color: '#39f' /}
        {param value kind="html"}
          {call dma.edit.field_input}
            {param name: 'strength' /}
            {param value: $entry.get_strength.present
                ? $entry.get_strength : '' /}
            {param validate: 'number' /}
            {param caption: 'Strength' /}
            {param class: 'field6' /}
          {/call}
          {call dma.edit.field_input}
            {param name: 'dexterity' /}
            {param value: $entry.get_dexterity.present
                ? $entry.get_dexterity : '' /}
            {param validate: 'number' /}
            {param caption: 'Dexterity' /}
            {param class: 'field6' /}
          {/call}
          {call dma.edit.field_input}
            {param name: 'constitution' /}
            {param value: $entry.get_constitution.present
              ? $entry.get_constitution : '' /}
            {param validate: 'number' /}
            {param caption: 'Constitution' /}
            {param class: 'field6' /}
          {/call}
          {call dma.edit.field_input}
            {param name: 'intelligence' /}
            {param value: $entry.get_intelligence.present
              ? $entry.get_intelligence : '' /}
            {param validate: 'number' /}
            {param caption: 'Intelligence' /}
            {param class: 'field6' /}
          {/call}
          {call dma.edit.field_input}
            {param name: 'wisdom' /}
            {param value: $entry.get_wisdom.present ? $entry.get_wisdom : '' /}
            {param validate: 'number' /}
            {param caption: 'Wisdom' /}
            {param class: 'field6' /}
          {/call}
          {call dma.edit.field_input}
            {param name: 'charisma' /}
            {param value: $entry.get_charisma.present
                ? $entry.get_charisma : '' /}
            {param validate: 'number' /}
            {param caption: 'Charisma' /}
            {param class: 'field6' /}
          {/call}
        {/param}
      {/call}    
      {call dma.edit.value_selection}
        {param name: 'alignment' /}
        {param label: 'Alignment' /}
        {param value: $entry.alignment.string /}
        {param choices: $ij.Alignment.names /}
        {param color: '#39f' /}
      {/call}
      {call dma.edit.value}
        {param name: 'religion' /}
        {param label: 'Religion' /}
        {param value: $entry.religion.present ? $entry.religion : '' /}
        {param color: '#39f' /}
        {param validate: 'non-empty' /}
      {/call}
      {call dma.edit.generic_value}
        {param label: 'Looks' /}
        {param value kind="html"}
          {call dma.edit.field}
            {param markup kind="html"}
              {call dma.edit.field_input}              
                {param name: 'height' /}
                {param value: $entry.height.present ? $entry.height : '' /}
                {param validate: 'non-empty' /}
                {param caption: 'height' /}
                {param width: '25%' /}
              {/call}
              {call dma.edit.field_input}              
                {param name: 'weight' /}
                {param value: $entry.weight.present ? $entry.weight : '' /}
                {param validate: 'non-empty' /}
                {param caption: 'weight' /}
                {param width: '25%' /}
              {/call}
              {call dma.edit.field_input}              
                {param name: 'looks' /}
                {param value: $entry.looks.present ? $entry.looks : '' /}
                {param validate: 'non-empty' /}
                {param caption: 'looks' /}
                {param width: '60%' /}
              {/call}
            {/param}
          {/call}
        {/param}
        {param color: '#39f' /}
      {/call}
      {call dma.edit.value_list}
        {param name: 'base' /}
        {param label: 'Race' /}
        {param values: $entry.base_names /}
        {param validate: 'non-empty' /}
        {param color: '#39f' /}
        {param autocomplete: 'base monster/name' /}
      {/call}    
      {call dma.edit.value_selection}
        {param name: 'state' /}
        {param label: 'State' /}
        {param value: $entry.state.string /}
        {param choices: $ij.CharacterState.names /}
        {param color: '#39f' /}
      {/call}
      {call dma.edit.generic_value}
        {param label: 'Levels' /}
        {param value kind="html"}
          {foreach $level in $entry.levels}
            {call dma.edit.field_list_line}
              {param id: 'level' /}
              {param field kind="html"}
                {call dma.entries.levels.edit}
                  {param entry: $level /}
                  {param index: index($level) /}
                {/call}
              {/param}
            {/call}
          {ifempty}
            {call dma.edit.field_list_line}
              {param id: 'level' /}
              {param field kind="html"}
                {call dma.entries.levels.edit}
                  {param index: 0 /}
                {/call}
              {/param}
            {/call}
          {/foreach}
        {/param}
        {param color: '#39f' /}
      {/call}
      {call dma.edit.generic_value}
        {param label: 'Skills' /}
        {param value kind="html"}
          {foreach $skill in $entry.skills}
            {call dma.edit.field_list_line}
              {param id: 'skill' /}
              {param field kind="html"}
                {call dma.entries.skills.edit}
                  {param entry: $skill /}
                  {param index: index($skill) /}
                {/call}
              {/param}
            {/call}
          {ifempty}
            {call dma.edit.field_list_line}
              {param id: 'skill' /}
              {param field kind="html"}
                {call dma.entries.skills.edit}
                  {param index: 0 /}
                {/call}
              {/param}
            {/call}
          {/foreach}
        {/param}
        {param color: '#39f' /}
      {/call}
      {call dma.edit.generic_value}
        {param label: 'Feats' /}
        {param value kind="html"}
          {foreach $feat in $entry.feats}
            {call dma.edit.field_list_line}
              {param id: 'feat' /}
              {param field kind="html"}
                {call dma.entries.feats.edit}
                  {param entry: $feat /}
                  {param index: 0 /}
                {/call}
              {/param}
            {/call}
          {ifempty}
            {call dma.edit.field_list_line}
              {param id: 'feat' /}
              {param field kind="html"}
                {call dma.entries.feats.edit}
                  {param index: 0 /}
                {/call}
              {/param}
            {/call}
          {/foreach}
        {/param}
        {param color: '#39f' /}
      {/call}
      {call dma.edit.generic_value}
        {param label: 'Qualities' /}
        {param value kind="html"}
          {foreach $quality in $entry.qualities}
            {call dma.edit.field_list_line}
              {param id: 'quality' /}
              {param field kind="html"}
                {call dma.entries.qualities.edit}
                  {param entry: $quality /}
                  {param prefix: 'class' /}
                  {param index: index($quality) /}
                {/call}
              {/param}
            {/call}
          {ifempty}
            {call dma.edit.field_list_line}
              {param id: 'quality' /}
              {param field kind="html"}
                {call dma.entries.qualities.edit}
                  {param prefix: 'class' /}
                  {param index: 0 /}
                {/call}
              {/param}
            {/call}
          {/foreach}
        {/param}
        {param color: '#39f' /}
      {/call}
      {call dma.edit.generic_value}
        {param name: 'language' /}
        {param label: 'Languges' /}
        {param value kind="html"}
          {call dma.edit.field}
            {param markup kind="html"}
              {foreach $language in $entry.languages}
                {call dma.edit.field_list_multiple}
                  {param values: [[
                    'name': 'language',
                    'value': $language.string,
                    'type': 'selection',
                    'choices': $ij.Language.names
                  ]] /}
                {/call}
              {ifempty}
                {call dma.edit.field_list_multiple}
                  {param values: [[
                    'name': 'language',
                    'value': '',
                    'type': 'selection',
                    'choices': $ij.Language.names
                  ]] /}
                {/call}
              {/foreach}
            {/param}
          {/call}
        {/param}
        {param color: '#39f' /}
      {/call}
      {call dma.edit.value_text}
        {param name: 'proto' /}
        {param label: 'Proto' /}
        {param value: $entry.proto /}
        {param validate: 'any' /}
        {param color: '#39f' /}
        {param rows: 30 /}
      {/call}
    {/param}
  {/call}
{/template}

/**
 * Template for setting a character icon.
 *
 * @param character The character to set for.
 */
{template .icon}
  <div class="caption-container">
    {call dma.page.link}
      {param url: $character.path /}
      {param class: 'overlayicon-link' /}
      {param text kind="html"}
        <div class="overlay">
          {if strContains($character.icon, 'http')}
            <img src="{$character.icon}" alt="{$character.name}"
                class="overlayicon" style="width:100px">
          {else}
            <img src="/icons/{$character.icon}" alt="{$character.name}"
                class="overlayicon">
          {/if}
          <img src="/icons/character/{$character.state}.png"
            class="overlay right-bottom">
        </div>
        <div class="caption">
          {$character.name}
        </div>
      {/param}
    {/call}
  </div>
{/template}


