/* ****************************************************************************
 * Copyright (c) 2002-2012 Peter 'Merlin' Balsiger and Fred 'Mythos' Dobler
 * All rights reserved
 *
 * This file is part of Dungeon Master Assistant.
 *
 * Dungeon Master Assistant is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * Dungeon Master Assistant is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with Dungeon Master Assistant; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 *****************************************************************************/

/*
 * The basic templates for rendering entries.
 */

{namespace dma.entry}

// @function def 1 0
// @function entry 1 0

/** Show the entry. */
{template .show}
  {@param entry: ?}
  {@param type: string}
  {@param values: html}
  {@param first: ?}
  {@param previous: ?}
  {@param list: ?}
  {@param next: ?}
  {@param last: ?}
  {@param color: string}
  {@param? title: html}
  {@param? noprint: bool}
  {@param? nodescriptions: bool}

  <div class="show entry {$type}{if $noprint} no-print{/if}">

    {call .toolbar}
      {param entry: $entry /}
    {/call}

    {if not $ij.params.card}
      {call .navigation}
        {param first: $first /}
        {param previous: $previous /}
        {param list: $list /}
        {param next: $next /}
        {param last: $last /}
      {/call}
      {call dma.navigation.navigation}
        {param entries:
            [
              [ 'label': $entry.type.link, 'url': '/' + $entry.type.multilink ],
              [ 'label': $entry.name, 'url': $entry.path ]
            ] /}
      {/call}
    {/if}

    <div class="_new_ images">
      {call dma.entry.mainImage}
        {param entry: $entry /}
      {/call}
        
      {foreach $file in $entry.all_files}
        {if not matches($file.name, 'main($|\\..*)') }
          {call dma.entry.file}
            {param file: $file /}
          {/call}
        {/if}
      {/foreach}

      {if $ij.hasDMAccess}
        <a target="_gcsimage" class="image-storage-link"
           href="https://console.cloud.google.com/storage/browser/jdmaixit-hrd.appspot.com/{$entry.type}/{lower($entry.name)}/?project=jdmaixit-hrd">
          cloud storage
        </a>
        <a target="_imgsrch" class="image-storage-link"
           href="https://www.google.com/search?tbm=isch&q={$entry.image_search_query}">
          image search
        </a>
      {/if}
    </div>

    <div class="values">

       {if $title}
         {$title}
       {else}
         {call dma.entry.title}
           {param title: $entry.name /}
           {param color: $color /}
         {/call}
       {/if}

      {if not $nodescriptions}
        {if def($entry.description)}
          <div class="_new_value _new_description">
            {commands(annotate($entry.combined_description))}
          </div>
        {/if}
        
        {if def($entry.short_description)}
          <div class="_new_value _new_short-description">
            {commands(annotate($entry.combined_short_description))}
          </div>
        {/if}
      {/if}

       <div class="_new_values">
         {$values} 
       </div>
       
      <div class="clear"></div>
    </div>
    
    {if not $ij.params.card}
      {call dma.entry.navigation}
        {param first: $first /}
        {param previous: $previous /}
        {param list: $list /}
        {param next: $next /}
        {param last: $last /}
      {/call}
    {/if}
    {literal}
      <script>
        $(document).ready(function()
        {
          $('DIV.files IMG.image')
            .mouseover(util.replaceMainImage)
            .mouseout(util.restoreMainImage);
        });
      </script>
    {/literal}

    {if true or $ij.isDev}
      <pre>
        {$entry.toProto.toString}
      </pre>
    {/if}
  </div>
  {if def($entry.campaign)}
    {call .campaign}
      {param campaign: $entry.campaign /}
    {/call}
  {/if}
{/template}

/** Show the toolbar with the avaialable actions. */
{template .toolbar}
  {@param entry: ?}
  <div class="toolbar">
    <div class="actions">
      <div class="action sprite large edit"
           onclick="edit.show('{$entry.name}',
                              '{$entry.path}.edit',
                   'edit-{escape($entry.type)}-{escape($entry.name)}')">
      </div>
      <div class="action sprite large delete"
           onclick="if(confirm('Do you really want to delete this?'))
                      util.ajax('/actions/remove',
                                {lb} key: '{escape($entry.key)}' {rb},
                                null, true);">
      </div> 
    </div>
  </div>
{/template}

/** The main title. */
{template .title}
  {@param title: html|string}
  {@param color: string}
  <div class="title-container">
  <span class="title" style="color: {$color}">
    {$title}
   <div class="decoration"
        style="background: -webkit-linear-gradient(right, transparent 0%,
               {$color} 100%);">
    </div>
  </span>
  </div>
{/template}

/** The sub title. */
{template .subtitle}
  {@param title: html|string}
  <div class="subtitle">
    {$title}
  </div>
{/template}

/** The base names of an entry. */
{template .bases}
  {@param entry: ?}
  {@param color: string}
  {@param type: string}
  {if length($entry.baseNames)}
    {call dma.entry.value}
      {param label: 'Base' /}
      {param value kind="html"}
        {foreach $base in $entry.baseNames}
          {call dma.page.link}
            {param text: $base /}
            {param url: '/' + $type + '/'  + $base /}

          {/call}
          {if not isLast($base)}; {/if}
        {/foreach}
      {/param}
      {param color: $color /}
    {/call}
  {/if}
{/template}

/** The synonyms of an entry. */
{template .synonyms}
  {@param entry: ?}
  {@param color: string}
  {if length($entry.synonyms)}
    {call dma.entry.value}
      {param label: 'Synonyms' /}
      {param value kind="html"}
        {foreach $synonym in $entry.synonyms}
          {$synonym}
          {if not isLast($synonym)}; {/if}
        {/foreach}
      {/param}
      {param color: $color /}
    {/call}
  {/if}
{/template}

/** The categories of an entry. */
{template .categories}
  {@param entry: ?}
  {@param color: string}
  {if length($entry.categories) or
      $entry.combined_categories.get.present}
    {call dma.entry.value}
      {param label: 'Categories' /}
      {param value kind="html"}
        {if length($entry.categories)}
          {foreach $category in $entry.categories}
            {$category}
            {if not isLast($category)}, {/if}
          {/foreach}
        {/if}
        {if $entry.combined_categories.get.present}
          {if length($entry.categories)},{sp}{/if}
          {annotate($entry.combined_categories)}
        {/if}
      {/param}
      {param color: $color /}
    {/call}
  {/if}
{/template}

/** The worlds of an entry. */
{template .worlds}
  {@param entry: ?}
  {@param color: string}
  {call dma.entry.value}
    {param label: 'Worlds' /}
    {param value: annotate($entry.combined_worlds) /}
    {param color: $color /}
  {/call}
{/template}

/** The references of an entry. */
{template .references}
  {@param entry: ?}
  {@param color: string}
  {call dma.entry.value}
    {param label: 'References' /}
    {param value: annotate($entry.combined_references) /}
    {param color: $color /}
  {/call}
{/template}

/** The incomplete value of an entry. */
{template .incomplete}
  {@param entry: ?}
  {@param color: string}
  {if $entry.incomplete or $entry.combined_incomplete.get.present}
    {call dma.entry.value}
      {param label: 'Incomplete' /}
      {param value kind="html"}
        {if $entry.incomplete}
          {$entry.incomplete}{sp}
        {/if}
        {annotate($entry.combined_incomplete)}
      {/param}
       {param color: $color /}
    {/call}
  {/if}
{/template}

/** The main image of an entry. */
{template .mainImage}
  {@param entry: ?}
  {@param? size: number}
  {if def($entry.main_file)}
    {call dma.page.link}
      {param url: $entry.main_file.path /}
      {param tooltip: 'Main' /}
      {param class: 'image-link' /}
      {param text kind="html"}
        <img src="{$entry.main_file.icon}" alt="Main" 
          class="_new_ _new_image _new_main" />
      {/param}
    {/call}
  {else}
    {call dma.page.link}
      {param url: '#' /}
      {param tooltip: 'Main' /}
      {param class: 'image-link' /}
      {param text kind="html"}
        <img src="/icons/{$entry.type.multiple_link}-dummy.png" alt="Main"
        class="_new_ _new_image _new_main"
        {if $size}
          {sp}style="max-width: {$size}px; max-height: {$size}px;"
        {else}
          {sp}style="max-width: 100px; max-height: 100px;"
        {/if} />
      {/param}
    {/call}
  {/if}
{/template}

/** An image for the entry. */
{template .file}
  {@param file: ?}
  {call dma.page.link}
    {param url: $file.path /}
    {param tooltip: $file.name /}
    {param class: 'image-link' /}
    {param text kind="html"}
      <img src="{$file.icon}"
        alt="{$file.name}" class="_new_ _new_image other" id="file=-other" />
    {/param}
  {/call}
{/template}

/** An entry value. */
{template .value}
  {@param label: string|html}
  {@param value: html}
  {@param color: string}
  <div class="_new_value">
    <div class="_new_value-label" style="color:{$color}">
      {$label}:
    </div>
    <div class="_new_value-content">
      {$value}
    </div>
  </div>
{/template}

/** Formatting a list of entries. */
{template .list}
  {@param title: html|string}
  {@param start: number}
  {@param pagesize: number}
  {@param size: number}
  {@param titles: list<html|string>}
  {@param entries: html}
  {@param label: html|string}
  {@param path: string}
  {@param? group: string}

  <h1>
    {$title}
    {if $group} &ndash; {$group}{/if}
  </h1>
  {call dma.page.title}
    {param title: $title + ($group ? ' - ' + $group : '') /}
  {/call}

  {call dma.navigation.navigation}
    {param entries: [[ 'label': $label, 'url': $path ]] /}
  {/call}
  {call dma.entry.listnav}
    {param start: $start /}
    {param pagesize: $pagesize /}
    {param size: $size /}
  {/call}

  {if $entries}
    <table class="entrylist">
      <tr class="title">
        {foreach $listTitle in $titles}
          {call .listtitle}{param title: $listTitle /}{/call}
        {/foreach}
      </tr>
      {$entries}
    </table>
    {call dma.entry.listnav}
      {param start: $start /}
      {param pagesize: $pagesize /}
      {param size: $size /}
    {/call}
  {else}
    <div class="error">No entries found!</div>
  {/if}
{/template}

/** Template for a single list title. */
{template .listtitle}
  {@param title: string|html}
  <td class="title">
    {$title}
  </td>
{/template}

/** Template for a single list entry. */
{template .listEntry}
  {@param path: string}
  {@param values: list<?>}
  {@param? colors: list<?>}
  <tr onclick="util.link(event, '{$path}')">
    {foreach $value in $values}
      {if startsWith($value, 'https://storage.cloud.google.com')}
        <td class="list image"><img src="{$value}" class="list-image"/></td>
      {else}
        <td class="list"
            {if $colors}
              {if $colors[index($value)]}
                style="background-color: {$colors[index($value)]}; color: white"

              {/if}
            {/if}>{$value}</td>
      {/if}
      </td>
    {/foreach}          
  </tr>   
{/template}

/** The entry navigation. */
{template .navigation}
  {@param first: ?}
  {@param previous: ?}
  {@param list: ?}
  {@param next: ?}
  {@param last: ?}
  <div class="entry-nav">
    {call .navigationEntry}
      {param url: $first /}
      {param style: 'first' /}
      {param tooltip: 'First' /}
    {/call}
    {call .navigationEntry}
      {param url: $previous /}
      {param style: 'previous' /}
      {param tooltip: 'Previous' /}
    {/call}
    {call .navigationEntry}
      {param url: $list /}
      {param style: 'index' /}
      {param tooltip: 'Index' /}
    {/call}
    {call .navigationEntry}
      {param url: $next /}
      {param style: 'next' /}
      {param tooltip: 'Next' /}
    {/call}
    {call .navigationEntry}
      {param url: $last /}
      {param style: 'last' /}
      {param tooltip: 'Last' /}
    {/call}
  </div>
{/template}

/** A single navigation entry. */
{template .navigationEntry}
  {@param url: string}
  {@param style: string}
  {@param tooltip: string}
  {call dma.page.link}
    {param url: $url /}
    {param tooltip: $tooltip /}
    {param text kind="html"}
      <div class="{$style} sprite{if not $url} disabled{/if}"></div>
    {/param}
  {/call}
{/template}

/* Stuff for indexes, not yet ported over to new template. */

/**
 * Template for list navigation.
 *
 * @param start The start index of the entries
 * @param pagesize The number of entries per page
 * @param size The number of available entries
 */
{template .listnav}
  <div class="list-navigation">
    {if $start > 0}
      {if $start - $pagesize > 0}
        <a href="?start={$start - $pagesize}" class="paginate-previous"
          onclick="return util.link(event, '?start={$start - $pagesize}');">
          {literal}&laquo;{/literal} previous
        </a>
      {else}
        <a href="" onclick="return util.link(event, '?');"
            class="paginate-previous">
          {literal}&laquo;{/literal} previous
        </a>
      {/if}
    {/if}
    {if $size > $pagesize}
      <a href="?start={$start + $pagesize}" class="paginate-next"
        onclick="return util.link(event, '?start={$start + $pagesize}');">
        {literal}&raquo;{/literal} next
      </a>
    {/if}
  </div>
{/template}

/** Template for rendering an index overview. */
{template .indexoverview}
  {@param title: string}
  {@param indexes: ?}
  {@param name: string}
  {@param keys: list<string>|null}
  {@param colors: list<string>}
  {@param type: string}
  {@param images: bool}

  {if $images}images{/if}
  <h1>{$title}</h1>
  {call dma.page.title}
    {param title: $title /}
  {/call}
  {call dma.navigation.navigation}
    {param entries: [[ 'label': $type, 'url': '/' + $type ],
                     [ 'label': $name, 'url': '' ]] /}
  {/call}
  {if $keys}
    {foreach $key in $keys}
      {if length($indexes[$key]) == 1}
        {call dma.page.link}
          {param url : $name + '/' + $key /}
          {param text kind="html"}
            <div class="index-overview">
              {$key}
            </div>
          {/param}
          {param tooltip: $key /}
          {param class: 'index-link' /}
        {/call}
      {else}
        <div class="index-overview" onclick="$(this).next().toggle();">
          {$key}
        </div>
        <div class="index-group">
          {foreach $index in $indexes[$key]}
            {$index} index
            {call dma.page.link}
              {param url : $name + '/'
                  + ($index ? $key + '::' + $index : $key) /}
              {param text kind="html"}
                <div class="index-overview">
                  {$index}--gugus
                </div>
              {/param}
              {param tooltip: $index /}
              {param class: 'index-link' /}
            {/call}
          {/foreach}
        </div>
      {/if}
    {/foreach}
  {else}
    {foreach $index in $indexes}
      {call dma.page.link}
        {param url : $name + '/' + $index /}
        {param text kind="html"}
          <div class="index-overview"
               {if $colors[index($index)]}
                 {sp}style="background-color: {$colors[index($index)]}"
               {/if}>
            {$index}
          </div>
        {/param}
        {param tooltip: $index /}
        {param class: 'index-link' /}
      {/call}
    {ifempty}
      <div class="error">No indexes found!</div>
    {/foreach}
  {/if}
  <div style="clear: both"></div>
{/template}

/**
 * Template for rendering an index.
 *
 * @param title the page title
 * @param start the start index
 * @param pagesize the size of a page
 * @param entries the entries rendered
 */
{template .index}
  <h1>INDEX: {$title}</h1>
  {call dma.page.title}
    {param title: $title /}
  {/call}
  {call .listnav}
    {param start: $start /}
    {param pagesize: $pagesize /}
    {param size: length($entries) /}
  {/call}
  {if $entries}
    <table class="entrylist">
      <tr class="title">
        {delcall dma.entry.listtitles /}
      </tr>
      {foreach $entry in $entries}
        <tr onclick="util.link(event, '{$entry.path}')">
          {delcall dma.entry.listentry}
            {param entry: $entry /}
          {/delcall}
        </tr>
      {/foreach}
    </table>
    {call .listnav}
      {param start: $start /}
      {param pagesize: $pagesize /}
      {param size: length($entries) /}
    {/call}
  {else}
    <div class="error">No entries found!</div>
  {/if}
{/template}

/** Campaign specific information. */
{template .campaign}
  {@param campaign: ?}

  <div id="campaign">
    <div class="campaign-container">
      <div class="campaign-name">{$campaign.name}</div>
      <div class="campaign-date">
        {call .adjustableDate}
          {param campaign: $campaign /}
          {param date: $campaign.date /}
        {/call}
      </div>
     </div>
  </div>
{/template}

/** Formatting a date that can be adjusted. */
{template .adjustableDate}
  {@param campaign: ?}
  {@param date: ?}

  {call .adjustableDatePart}
    {param part: $date.monthFormatted /}
    {param key: $campaign.key /}
    {param month: 1 /}
    {param name: 'month' /}
  {/call}

  {call .adjustableDatePart}
    {param part: $date.dayFormatted /}
    {param key: $campaign.key /}
    {param day: 1 /}
    {param name: 'day' /}
  {/call}

  {call .adjustableDatePart}
    {param part: $date.year /}
    {param key: $campaign.key /}
    {param year: 1 /}
    {param name: 'year' /}
  {/call}

  {call .adjustableDatePart}
    {param part: $date.hoursFormatted /}
    {param key: $campaign.key /}
    {param hour: 1 /}
    {param name: 'hours' /}
  {/call}
  :
  {call .adjustableDatePart}
    {param part: $date.minutesFormatted /}
    {param key: $campaign.key /}
    {param minute: 5 /}
    {param name: 'minutes' /}
  {/call}

{/template}

/** A part of a formatted and adjustable date. */
{template .adjustableDatePart}
  {@param name: string}
  {@param part: html}
  {@param key: string}
  {@param? year: int}
  {@param? month: int}
  {@param? day: int}
  {@param? hour: int}
  {@param? minute: int}

  <div class="date-element">
    <span id="campaign-date-{$name}">{if $part}{$part}{else}&nbsp;{/if}</span>
    <div class="action up"
         onclick="util.time('{$key}', {$minute ? $minute : 0},
                            {$hour ? $hour : 0}, {$day ? $day : 0},
                            {$month ? $month : 0}, {$year ? $year : 0})">
      ▲
    </div>
    <div class="action down"
         onclick="util.time('{$key}', {$minute ? -$minute : 0},
                            {$hour ? -$hour : 0}, {$day ? -$day : 0},
                            {$month ? -$month : 0}, {$year ? -$year : 0})">
      ▼
    </div>
  </div>
{/template}
